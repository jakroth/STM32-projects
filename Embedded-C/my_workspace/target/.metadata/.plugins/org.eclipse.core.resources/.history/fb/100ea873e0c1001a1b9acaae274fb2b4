/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */


int main(void)
{
	uint32_t volatile * const pABH1_Clk_Reg 	= (uint32_t*)0x40023830;
	uint32_t volatile * const pGPIO_D_Mode_Reg 	= (uint32_t*)0x40020C00;
	uint32_t volatile * const pGPIO_D_Pull_Reg 	= (uint32_t*)0x40020C0C;
	uint32_t volatile * const pGPIO_D_Inp_Reg 	= (uint32_t*)0x40020C10;
	uint32_t volatile * const pGPIO_D_Out_Reg 	= (uint32_t*)0x40020C14;

	//using pins PD 0,1,2,3 for columns (input)
	//using pins PD 8,9,10,11 for rows (output)

	//1. Set clock on for the GPIO_D pins (bit 3 = "1")
	*pABH1_Clk_Reg |= (1 << 3);

	//2. Set mode for all column pins to input (it's the default state, but don't assume they are already in that state)
	// at the same time, set all row pins to 0 initially, in preparation for next step
	// (bits 0-7 = "0", bits 16-23 = "0"), bit mask to use is 11111111 00000000 11111111 00000000 = 0xFF00FF00
	*pGPIO_D_Mode_Reg &= 0xFF00FF00;

	//3. Set mode for all row pins to output
	// (bits 16-23 = "01"), but need to set all to 0 first, then set to "01"


	for(;;);
}
