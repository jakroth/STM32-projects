/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>		// include this to use standardised type, e.g. uint32_t; avoids different implementations of int on different architectures

int main(void)
{
	// pointer to hold the address of the register of the clock for all the GPIO pins (among other things)
	// 32-bit type to store a 32-bit memory address
	// the address is for the clock of peripherals on the AHB1 (bus), which includes the GPIO pins
	// need to set the value of individual bits of this memory address, to turn on the clock for the correct GPIO pins (it's bit 3 for GPIO D)
	// so need a bit | mask to set bits
	// sets the clock on for all 16 of the GPIO D pins
	uint32_t *pClkCtrlReg = (uint32_t*) 0x40023830;

	// pointer to hold the address of the modes for the GPIO D pins
	// the address is equal to the GPIO D base register address + the offset for the mode registers
	// need to set the value of individual bits of this memory address, to turn on the correct GPIO pin (it's bit 3 for GPIO D)
	// so need a bit | mask to set bits
	uint32_t *pPortDModeReg = (uint32_t*) (0x40020c00 + 0x00);
	uint32_t *pPort = (uint32_t*) 0x40023830;
	for(;;);
}
